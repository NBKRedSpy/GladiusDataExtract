@page
@using GladiusDataExtract.Extract.Units;
@using GladiusDataExtract.Extract.Weapons;
@model GladiusStatWeb.Pages.UnitsModel



@*@foreach (var unit in Model.Units.Where(x => x.Name == "Hormagaunt"))*@
@*
@foreach (var unit in Model.Units)
{
	string htmlId = unit.Key.Replace("/", "-");


	<div id="@htmlId" class="unit-name"><a href="#@htmlId">@unit.Name</a></div>
	<div>
		<div class="stats-container">
		<div>Count: @unit.ModelCount </div>

		@foreach (UnitAttribute unitAttribute in Model.GetDisplayAttributes(unit))
		{
			<span>@unitAttribute.Name @unitAttribute.Value.ToString("#.##")</span>
		}
		</div>
		<div class="weapons-container">
			@foreach (Weapon weapon in unit.Weapons)
			{

				<span class="weapon-name" >@weapon.Name</span>

				var stats = weapon.GetWeaponStats(unit);

				foreach (var stat in stats)
				{

					bool showModelCount = stat.Item1.EndsWith("ttacks") && unit.ModelCount > 1; //Attacks
					bool isAccuracy = stat.Item1.EndsWith("ccuracy");  //Accuracy

					<div class="weapon-stats">@stat.Item1: @stat.Item2 
						@if (showModelCount)
						{
							@(" (x" + unit.ModelCount + ")")
						}
						else if(isAccuracy)
						{
							@(" (" + Model.GetAccuracyChance((int)stat.Item2) + "%)")
						}
					</div>

					

				}

				<div>Weapon Traits</div>
				@foreach (var trait in weapon.Traits)
				{
					<div>@trait</div>
				}
			}
		</div>

		@if(unit.Traits.Count != 0)
		{
			<div class="traits-container">
				Traits

				@foreach (var trait in unit.Traits)
				{
					<div>@trait.Name
						@if(trait.RequiredUpgrade is not null)
						{
							@(" -> " + trait.RequiredUpgrade)
						}
					</div>	
				}
			</div>
		}


		
	</div>


}
	*@

Debugging